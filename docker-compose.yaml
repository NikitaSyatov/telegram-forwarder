services:
  database:
    image: postgres:15
    container_name: forwarder_backend_database
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  backend:
    container_name: forwarder_backend_application
    ports:
      - "8080:8080"
    build:
      context: ForwarderBackend
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - database
      - logstash
  sender:
    container_name: sender_api
    build:
      context: SenderApi
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - backend
      - logstash
    volumes:
      - ./SenderApi/mounted:/mounted
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=true
      - ELASTIC_USERNAME=${ELASTIC_USERNAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - elastic_search_data:/usr/share/elasticsearch/data
    env_file:
      - .env
  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.0
    container_name: logstash
    environment:
      - XPACK_SECURITY_ENABLED=false
      - XPACK_MONITORING_ENABLED=false
    depends_on:
      - elasticsearch
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    env_file:
      - .env
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    container_name: kibana
    ports:
      - "${KIBANA_PORT}:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    env_file:
      - .env
volumes:
  postgres_data:
  elastic_search_data: